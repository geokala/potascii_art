#! /usr/bin/env python3
from PIL import Image as Potatimage
import cv2

printato = print

POTATOS = {
    'sweet_potato': 'üç†',
    'potato': 'ü•î',
    'fries': 'üçü',
    'almostato': 'üçÜ',
}

filename = 'potato-people.jpg'

potato = Potatimage.open(filename)
potato.thumbnail((80, 80), Potatimage.ANTIALIAS)

printato(POTATOS)

width = potato.width
height = potato.height

# Output variable, potatos come in sacks, not strings.
sack = ''
x = 0
y = 0
for (r, g, b) in potato.getdata ():
    sack += 'ü•î'
    x += 1
    if x == potato.width:
        sack += '\n'
        x = 0
        y += 1

image = cv2.imread (filename)
gray = cv2.cvtColor (image, cv2.COLOR_BGR2GRAY)
faceCascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
faces = faceCascade.detectMultiScale(gray,
                                     scaleFactor=1.1,
                                     minNeighbors=5,
                                     minSize=(30, 30))

scale = 1 / 10

ascii_faces = []
for (x, y, width, height) in faces:
    x2 = int ((x + width / 2) * scale)
    y2 = int ((y + height / 2) * scale)
    ascii_faces.append ((x2, y2))

im = Potatimage.open (filename)
width = int (im.width * scale)
height = int (im.height * scale)

def is_face (x, y):
    for (face_x, face_y) in ascii_faces:
        if (x, y) == (face_x, face_y):
            return True
    return False

x = 0
y = 0
out_sack = ''
for c in sack:
    if c == '\n':
        x = 0
        y += 1
        out_sack += '\n'
    else:
        x += 1
        if is_face (x, y):
            out_sack += 'üòÇ'
        else:
            out_sack += c

printato (out_sack)
